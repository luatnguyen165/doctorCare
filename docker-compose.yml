version: "3.4"

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    image: doctorcare-docker/docker-node-mongo-redis:v1
    volumes:
      - ./:/app # mount từ môi trường gốc vào trong để nếu các bạn thay đổi code thì bên trong sẽ tự động cập nhật
    environment: # phần này ta định nghĩa ở file .env nhé
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGOURL= mongodb://db/doctorcare
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      # - REDIS_PASSWORD=mypassword
      - PORT=${PORT}
   
    ports:
      - "${PORT}:${PORT}" # phần này ta định nghĩa ở file .env nhé
    command: yarn run dev
    restart: always
    depends_on:
        - redis
        - db
        - elasticsearch
        - kibana
  
  db:
    image: mongo
    volumes:
      - .docker/data/db:/data/db
    restart: always
  
  redis:
    image: redis:5-alpine
    volumes:
      - .docker/data/redis:/data
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - .docker/data/elasticsearch:/data/db
    ports:
      - 9200:9200
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 
    volumes:
      - .docker/data/kibana:/data/db   # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch 